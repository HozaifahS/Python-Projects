
#Simple Ping Pong Python Project

import turtle
from tkinter import messagebox
# import time

#Setting up a background/screen

wn = turtle.Screen()
wn.title("Ping Pong by CCw/H")
wn.bgcolor("black")
wn.setup(width=800, height=600)
wn.tracer(0)

#Score
score_a = 0
score_b = 0

#Paddle A
paddle_a = turtle.Turtle()
paddle_a.speed(0)
paddle_a.shape("square")
paddle_a.color("white")
paddle_a.shapesize(stretch_wid=5, stretch_len=1)
paddle_a.penup()
paddle_a.goto(-350, 0)



#Paddle B
paddle_b = turtle.Turtle()
paddle_b.speed(0)
paddle_b.shape("square")
paddle_b.color("white")
paddle_b.shapesize(stretch_wid=5, stretch_len=1)
paddle_b.penup()
paddle_b.goto(350, 0)


#Ball
ball = turtle.Turtle()
ball.speed(0)
ball.shape("square")
ball.color("white")
ball.penup()
ball.goto(0, 0)
ball.dx = 0.15
ball.dy = 0.15


#Pen
pen = turtle.Turtle()
pen.speed(0)
pen.color("white")
pen.penup()
pen.hideturtle()
pen.goto(0, 260)
pen.write("Player A: 0   Player B: 0", align = "center", font= ("Courier", 24, "normal"))

#Player 1 pen
penp1 = turtle.Turtle()
penp1.speed(0)
penp1.color("white")
penp1.penup()
penp1.hideturtle()
penp1.goto(-255, 0)
penp1.write("Player A", font = ("Courier", 15, "bold"))

#Player 2 pen
penp2 = turtle.Turtle()
penp2.speed(0)
penp2.color("white")
penp2.penup()
penp2.hideturtle()
penp2.goto(145, 0)
penp2.write("Player B", font = ("Courier", 15, "bold"))

#VS pen
penvs = turtle.Turtle()
penvs.speed(0)
penvs.color("white")
penvs.penup()
penvs.hideturtle()
penvs.goto(-5, 0)
penvs.write("vs", font = ("Courier", 15, "bold"))


  # Functions
def paddle_a_up():
    y = paddle_a.ycor()
    y += 20
    paddle_a.sety(y)

def paddle_a_down():
    y = paddle_a.ycor()
    y -= 20
    paddle_a.sety(y)

def paddle_b_up():
    y = paddle_b.ycor()
    y += 20
    paddle_b.sety(y)

def paddle_b_down():
    y = paddle_b.ycor()
    y -= 20
    paddle_b.sety(y)

#Keyboard Bindings
wn.listen()    #This command allows Python to listen and watch out for any keyboard buttons being pressed
wn.onkeypress(paddle_a_up, "w")
wn.onkeypress(paddle_a_down, "s")
wn.onkeypress(paddle_b_up, "Up")
wn.onkeypress(paddle_b_down, "Down")


#Main Game Loop
while True:
    wn.update()

    # Moving the Ball
    ball.setx(ball.xcor() + ball.dx)
    ball.sety(ball.ycor() + ball.dy)

    #Border checking
    if ball.ycor() > 290:
        ball.sety(290)
        ball.dy *= -1

    if ball.ycor() < -290:
        ball.sety(-290)
        ball.dy *= -1

    if ball.xcor() > 390:
        ball.goto(0, 0)
        ball.dx *= -1
        score_a += 1
        pen.clear()
        pen.write("Player A: {}   Player B: {}".format(score_a, score_b), align = "center", font= ("Courier", 24, "normal"))

    if ball.xcor() < -390:
        ball.goto(0, 0)
        ball.dx *= -1
        score_b += 1
        pen.clear()
        pen.write("Player A: {}   Player B: {}".format(score_a, score_b), align = "center", font= ("Courier", 24, "normal")) 

    #Paddle and ball collisions
        
    if (ball.xcor() > 340 and ball.xcor() < 350) and (ball.ycor() < paddle_b.ycor() + 40 and ball.ycor() > paddle_b.ycor() -40):
        ball.setx(340)
        ball.dx *= -1

    
    if (ball.xcor() < -340 and ball.xcor() > -350) and (ball.ycor() < paddle_a.ycor() + 40 and ball.ycor() > paddle_a.ycor() -40):
        ball.setx(-340)
        ball.dx *= -1

    if score_a >= 5:
        turtle.bye()
        messagebox._show("Player A won!")

    if score_b >= 5:
        turtle.bye()
        messagebox._show("Player B won!")
